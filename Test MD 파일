[session/traffic 집계]
-- flag 테이블 추가(명칭 등 임시)
CREATE TABLE `tbl_llt_service_flag` (
  `monitoring_time` datetime NOT NULL,
  `update_time` datetime NOT NULL COMMENT '마지막 변경 시간',
  `service_number` int NOT NULL COMMENT '유효 서비스 flag'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `tbl_test_monitoring_session` (
  `idx` int(11) NOT NULL AUTO_INCREMENT COMMENT '이력용 id',
  `log_date` datetime NOT NULL,
  `vod_ip` varchar(15) NOT NULL COMMENT 'hc vod server IP',
  `file_nm` varchar(255) DEFAULT NULL,
  `stb_ip` varchar(15) NOT NULL COMMENT 'so vod server IP',
  `traffic` bigint(20) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idx`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='30초 모니터링 임시 테이블';

### [AGG 1: 5minSessTraff -> servertrafficperhour]

-- current session -> agg1 //30초 세션 모니터링 임시 데이터.
  SELECT m.vod_ip 
    , s.so_cd, s.so_nm
    , m.file_nm
    , 1 as count, m.traffic
  FROM tbl_test_monitoring_session m
  INNER JOIN (
    SELECT v.so_cd, v.server_ip, s.so_nm FROM tbl_llt_so s
    INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
  ) s ON m.idx >= 5001 and m.idx <= 6000 AND m.stb_ip = s.server_ip

-- current vod serv traffic agg : 매번 최신만 갖는 데이터
-- ! 로그 없는 서버 정보 없음
SELECT v.server_id, a.vod_ip as server_ip, v.server_nm, a.traffic
FROM (
  SELECT a.vod_ip, sum(a.traffic) as traffic
  FROM (
   -- same as above qry : session -> agg1 st
    SELECT m.vod_ip 
      , s.so_cd, s.so_nm
      , m.file_nm
      , 1 as count, m.traffic
    FROM tbl_test_monitoring_session m
    INNER JOIN (
      SELECT v.so_cd, v.server_ip, s.so_nm FROM tbl_llt_so s
      INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
    ) s ON m.idx >= 5001 and m.idx <= 6000 AND m.stb_ip = s.server_ip
   -- same as above qry : session -> agg1 end
  ) a group by a.vod_ip
) a
INNER JOIN tbl_llt_server v ON a.vod_ip = v.server_ip -- AND v.so_type = 'MNG'
-- !! 로그 없는 서버도 나오도록 !
SELECT v.server_id, v.server_ip, v.server_nm, a.traffic
FROM (
  SELECT a.vod_ip, sum(a.traffic) as traffic
  FROM (
   -- same as above qry : session -> agg1 st
    SELECT m.vod_ip 
      , s.so_cd, s.so_nm
      , m.file_nm
      , 1 as count, m.traffic
    FROM tbl_test_monitoring_session m
    INNER JOIN (
      SELECT v.so_cd, v.server_ip, s.so_nm FROM tbl_llt_so s
      INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
    ) s ON m.idx >= 5001 and m.idx <= 6000 AND m.stb_ip = s.server_ip
    AND m.vod_ip != '172.244.221.0' -- 로그 임시 없애서 test!! OK
   -- same as above qry : session -> agg1 end
  ) a group by a.vod_ip
) a
-- INNER JOIN tbl_llt_server v ON a.vod_ip = v.server_ip -- AND v.so_type = 'MNG'
RIGHT OUTER JOIN (
  SELECT v.server_id, v.server_ip, v.server_nm FROM tbl_llt_so s
  INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type = 'MNG'
) v ON a.vod_ip = v.server_ip -- AND v.so_type = 'MNG'


-- current so-file_nm agg : 매번 최신만 갖는 데이터
-- ! 로그 없는 so 정보 없어도 됨!
SELECT a.so_cd, a.file_nm, sum(a.count), sum(a.traffic)
FROM (
 -- same as above qry : session -> agg1 st
  SELECT m.vod_ip 
    , s.so_cd, s.so_nm
    , m.file_nm
    , 1 as count, m.traffic
  FROM tbl_test_monitoring_session m
  INNER JOIN (
    SELECT v.so_cd, v.server_ip, s.so_nm FROM tbl_llt_so s
    INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
  ) s ON m.idx >= 5001 and m.idx <= 6000 AND m.stb_ip = s.server_ip
 -- same as above qry : session -> agg1 end
) a group by a.so_cd, a.file_nm

-- current so traffic agg : 매번 최신만 갖는 데이터
-- ! 로그 없는 so 정보 없음.
SELECT a.so_cd, sum(a.traffic)
FROM (
 -- same as above qry : session -> agg1 st
  SELECT m.vod_ip 
    , s.so_cd, s.so_nm
    , m.file_nm
    , 1 as count, m.traffic
  FROM tbl_test_monitoring_session m
  INNER JOIN (
    SELECT v.so_cd, v.server_ip, s.so_nm FROM tbl_llt_so s
    INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
  ) s ON m.idx >= 5001 and m.idx <= 6000 AND m.stb_ip = s.server_ip
 -- same as above qry : session -> agg1 end
) a group by a.so_cd

-- !! 로그 없는 서버도 나오도록 !
SELECT s.so_cd, a.traffic
FROM (
  SELECT a.so_cd, sum(a.traffic) as traffic
  FROM (
   -- same as above qry : session -> agg1 st
    SELECT m.vod_ip 
      , s.so_cd, s.so_nm
      , m.file_nm
      , 1 as count, m.traffic
    FROM tbl_test_monitoring_session m
    INNER JOIN (
      SELECT v.so_cd, v.server_ip, s.so_nm FROM tbl_llt_so s
      INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
    ) s ON m.idx >= 5001 and m.idx <= 6000 AND m.stb_ip = s.server_ip
   -- same as above qry : session -> agg1 end
   AND s.so_cd != '01' -- test!!
  ) a group by a.so_cd
) a
RIGHT OUTER JOIN tbl_llt_so s
ON s.so_cd = a.so_cd



[vod_log 집계]
 - server_ip //홈초이스 vod 서버
 - client_ip //SO VOD 서버. (?)unique
 - filename  //
 - log_date  //count 집계 기준
 
1. 서버_콘_힛카운트_hour(day, month)
 date, hour, server_id, server_nm, file_nm, hit_count

2. so_콘_힛카운트_hour(day, month)
 date, hour, so_cd, so_nm, file_nm, hit_count


!! 시간 단위로 점진적으로 day, month 모두 채우는 방식으로 일단 한다!!


### [AGG 1: vod_log -> servercontenthitcountperhour]
INSERT INTO tbl_llt_servercontenthitcountperhour
 (date, hour, server_id, server_nm, file_name, hit_count) 
SELECT l.date, l.hour, s.server_id, s.server_nm, l.filename, l.hit_count
FROM (
  SELECT server_ip, filename, COUNT(*) hit_count
   , DATE_FORMAT(log_date, '%Y%m%d') date
   , DATE_FORMAT(log_date, '%H') hour
   -- , client_ip
  FROM tbl_test_vod_log
  GROUP BY server_ip, filename
) l
INNER JOIN (
  SELECT v.server_id, v.server_ip, v.server_nm FROM tbl_llt_so s
  INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type = 'MNG'
) s
ON l.server_ip = s.server_ip;

### [AGG 2: servercontent hitcount per hour -> servercontenthitcountper day]
INSERT INTO tbl_llt_servercontenthitcountperday
 (day_of_week, week_of_year, date, server_id, server_nm, file_name, hit_count) 
SELECT DATE_FORMAT(STR_TO_DATE(date, '%Y%m%d'), '%w') day_of_week
 , DATE_FORMAT(STR_TO_DATE(date, '%Y%m%d'), '%U') week_of_year
 , date
 , server_id, server_nm, file_name
 , SUM(hit_count) hit_count
FROM tbl_llt_servercontenthitcountperhour
GROUP BY date, server_id, file_name;

### [AGG 3: servercontent hitcount per day -> servercontenthitcountper month]
INSERT INTO tbl_llt_servercontenthitcountpermonth
 (date, server_id, server_nm, file_name, hit_count) 
SELECT date, server_id, server_nm, file_name, SUM(hit_count) hit_count
FROM (
  SELECT SUBSTRING(date, 1, 6) date
   , server_id, server_nm, file_name
   , hit_count
  FROM tbl_llt_servercontenthitcountperday
) a
GROUP BY date, server_id, file_name;


### [AGG 4: vod_log -> socontenthitcountperhour]
INSERT INTO tbl_llt_socontenthitcountperhour
 (date, hour, so_cd, so_nm, file_name, hit_count) 
SELECT 
 l.date, l.hour, 
 s.so_cd, s.so_nm, l.filename, SUM(l.hit_count) hit_count
FROM (
  SELECT client_ip, filename, 1 hit_count
   , DATE_FORMAT(log_date, '%Y%m%d') date
   , DATE_FORMAT(log_date, '%H') hour
  FROM tbl_test_vod_log
) l
INNER JOIN (
  SELECT v.server_ip, v.so_cd, s.so_nm FROM tbl_llt_so s
  INNER JOIN tbl_llt_server v ON s.so_cd = v.so_cd AND s.so_type != 'MNG'
) s
ON l.client_ip = s.server_ip
GROUP BY l.date, l.hour, s.so_cd, l.filename;

### [AGG 5: socontenthitcountperhour -> socontenthitcountperday]
INSERT INTO tbl_llt_socontenthitcountperday
 (day_of_week, week_of_year, date, so_cd, so_nm, file_name, hit_count) 
SELECT DATE_FORMAT(STR_TO_DATE(date, '%Y%m%d'), '%w') day_of_week
 , DATE_FORMAT(STR_TO_DATE(date, '%Y%m%d'), '%U') week_of_year
 , date
 , so_cd, so_nm, file_name
 , SUM(hit_count) hit_count
FROM tbl_llt_socontenthitcountperhour
GROUP BY date, so_cd, file_name;

### [AGG 6: socontenthitcountperday -> socontenthitcountpermonth]
INSERT INTO tbl_llt_socontenthitcountpermonth
 (date, so_cd, so_nm, file_name, hit_count) 
SELECT date, so_cd, so_nm, file_name, SUM(hit_count) hit_count
FROM (
  SELECT SUBSTRING(date, 1, 6) date
   , so_cd, so_nm, file_name
   , hit_count
  FROM tbl_llt_socontenthitcountperhour
) a
GROUP BY date, so_cd, file_name;
